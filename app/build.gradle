plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        buildConfigField 'String', 'API_KEY', API_KEY
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "com.google.truth:truth:1.1.3"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7'
    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation 'org.mockito:mockito-inline:3.3.3'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'com.tngtech.archunit:archunit-junit4:0.14.1'

    //retrofit rest api
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //viewModel + kotlin ex
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0")
    //live data kt
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.0"

    implementation("androidx.activity:activity-ktx:1.5.0")
    implementation "androidx.fragment:fragment-ktx:1.5.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.0"

    //glide image loading
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    //dependency injection
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"

    //one line fragment view binding delegater
    implementation 'com.github.Zhuinden:fragmentviewbindingdelegate-kt:1.0.0'

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.5.0")
    implementation("androidx.navigation:navigation-ui-ktx:2.5.0")

    //room
    implementation("androidx.room:room-runtime:2.4.2")
    implementation("androidx.room:room-ktx:2.4.2")
    annotationProcessor("androidx.room:room-compiler:2.4.2")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.4.2")


}